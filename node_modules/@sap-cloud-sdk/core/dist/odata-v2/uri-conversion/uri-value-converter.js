"use strict";
/* eslint-disable valid-jsdoc */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.uriConvertersV2 = exports.uriConverterV2 = exports.uriConverter = exports.uriConverters = void 0;
var payload_value_converter_1 = require("../payload-value-converter");
var odata_common_1 = require("../../odata-common");
/**
 * @hidden
 */
exports.uriConverters = __assign(__assign({}, odata_common_1.uriConvertersCommon), { 'Edm.DateTime': function (value) {
        return "datetime'".concat((0, payload_value_converter_1.edmToTs)(value, 'Edm.DateTime')
            .toISOString()
            .replace(/Z$/, ''), "'");
    }, 'Edm.DateTimeOffset': function (value) {
        return "datetimeoffset'".concat((0, payload_value_converter_1.edmToTs)(value, 'Edm.DateTimeOffset').toISOString(), "'");
    }, 'Edm.Decimal': function (value) { return "".concat(value, "M"); }, 'Edm.Time': function (value) { return "time'".concat(value, "'"); }, 'Edm.Guid': function (value) { return "guid'".concat(value, "'"); } });
exports.uriConvertersV2 = exports.uriConverters;
/**
 * @hidden
 */
exports.uriConverter = {
    convertToUriFormat: function (value, edmType) {
        var converted = (0, payload_value_converter_1.tsToEdm)(value, edmType);
        var uriConverterFunc = exports.uriConverters[edmType];
        if (uriConverterFunc) {
            return uriConverterFunc(converted);
        }
        return converted;
    }
};
exports.uriConverterV2 = exports.uriConverter;
//# sourceMappingURL=uri-value-converter.js.map