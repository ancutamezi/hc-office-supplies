import { Entity } from '../entity';
import { Constructable, Filterable } from '../../odata-common';
/**
 * @deprecated Since v1.21.0. Use [[ODataUri.getFilter]] instead.
 * Get an object containing the given filter as query parameter, or an empty object if none was given.
 * @typeparam EntityT - Type of the entity to filter on
 * @param filter - The filter to transform to a query parameter
 * @param entityConstructor - Constructor type of the entity to filter on
 * @returns An object containing the query parameter or an empty object
 */
export declare function getQueryParametersForFilter<EntityT extends Entity>(filter: Filterable<EntityT>, entityConstructor: Constructable<EntityT>): Partial<{
    filter: string;
}>;
//# sourceMappingURL=get-filter.d.ts.map