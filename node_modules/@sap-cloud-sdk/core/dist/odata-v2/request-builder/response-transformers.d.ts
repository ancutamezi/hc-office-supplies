import { Entity } from '../entity';
import { Constructable } from '../../odata-common';
/**
 * @hidden
 */
export declare function transformReturnValueForUndefined<ReturnT>(data: any, builderFn: (data: any) => ReturnT): ReturnT;
export { transformReturnValueForUndefined as transformReturnValueForUndefinedV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForEntity<ReturnT extends Entity>(data: any, entityConstructor: Constructable<ReturnT>): ReturnT;
export { transformReturnValueForEntity as transformReturnValueForEntityV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForEntityList<ReturnT extends Entity>(data: any, entityConstructor: Constructable<ReturnT>): ReturnT[];
export { transformReturnValueForEntityList as transformReturnValueForEntityListV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForComplexType<ReturnT>(data: any, builderFn: (data: any) => ReturnT): ReturnT;
export { transformReturnValueForComplexType as transformReturnValueForComplexTypeV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForComplexTypeList<ReturnT>(data: any, builderFn: (data: any) => ReturnT): ReturnT[];
export { transformReturnValueForComplexTypeList as transformReturnValueForComplexTypeListV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForEdmType<ReturnT>(data: any, builderFn: (data: any) => ReturnT): ReturnT;
export { transformReturnValueForEdmType as transformReturnValueForEdmTypeV2 };
/**
 * @hidden
 */
export declare function transformReturnValueForEdmTypeList<ReturnT>(data: any, builderFn: (data: any) => ReturnT): ReturnT[];
export { transformReturnValueForEdmTypeList as transformReturnValueForEdmTypeListV2 };
//# sourceMappingURL=response-transformers.d.ts.map