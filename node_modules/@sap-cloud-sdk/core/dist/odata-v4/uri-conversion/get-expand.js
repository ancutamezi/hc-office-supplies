"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getExpandV4 = exports.getExpand = void 0;
var odata_common_1 = require("../../odata-common");
var get_select_1 = require("./get-select");
var uri_value_converter_1 = require("./uri-value-converter");
function prependDollar(param) {
    return "$".concat(param);
}
/**
 * Get an object containing the given expand as a query parameter, or an empty object if none was given.
 * @typeparam EntityT - Type of the entity to expand on
 * @param expands - The expands to transform to a query parameter
 * @param entityConstructor - Constructor type of the entity to expand on
 * @returns An object containing the query parameter or an empty object
 */
function getExpand(expands, entityConstructor) {
    if (expands === void 0) { expands = []; }
    return expands.length
        ? {
            expand: expands
                .map(function (expand) { return getExpandAsString(expand, entityConstructor); })
                .join(',')
        }
        : {};
}
exports.getExpand = getExpand;
exports.getExpandV4 = getExpand;
function getExpandAsString(expand, entityConstructor) {
    var _a;
    if (expand instanceof odata_common_1.AllFields) {
        return '*';
    }
    var params = {};
    if (expand instanceof odata_common_1.Link) {
        params = __assign(__assign(__assign({}, params), (0, get_select_1.getSelect)(expand._selects)), getExpand(expand._expand, expand._linkedEntity));
        if (expand instanceof odata_common_1.OneToManyLink) {
            params = __assign(__assign(__assign(__assign(__assign({}, params), (0, odata_common_1.createGetFilter)(uri_value_converter_1.uriConverter).getFilter(odata_common_1.and.apply(void 0, (_a = expand._filters) === null || _a === void 0 ? void 0 : _a.filters), entityConstructor)), (expand._skip && { skip: expand._skip })), (expand._top && { top: expand._top })), (expand._orderBy && (0, odata_common_1.getOrderBy)(expand._orderBy)));
        }
        var subQuery = Object.entries(params)
            .map(function (_a) {
            var key = _a[0], value = _a[1];
            return "".concat(prependDollar(key), "=").concat(value);
        })
            .join(';');
        var subQueryWithBrackets = subQuery ? "(".concat(subQuery, ")") : '';
        return "".concat(expand._fieldName).concat(subQueryWithBrackets);
    }
    return '';
}
//# sourceMappingURL=get-expand.js.map