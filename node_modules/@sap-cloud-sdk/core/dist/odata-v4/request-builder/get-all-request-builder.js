"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetAllRequestBuilderV4 = exports.GetAllRequestBuilder = void 0;
var util_1 = require("@sap-cloud-sdk/util");
var entity_deserializer_1 = require("../entity-deserializer");
var odata_common_1 = require("../../odata-common");
var uri_conversion_1 = require("../uri-conversion");
var response_data_accessor_1 = require("./response-data-accessor");
var GetAllRequestBuilder = /** @class */ (function (_super) {
    __extends(GetAllRequestBuilder, _super);
    /**
     * Creates an instance of GetAllRequestBuilder.
     * @param entityConstructor - Constructor of the entity to create the request for
     */
    function GetAllRequestBuilder(entityConstructor) {
        return _super.call(this, entityConstructor, new odata_common_1.ODataGetAllRequestConfig(entityConstructor, uri_conversion_1.oDataUri), entity_deserializer_1.entityDeserializer, response_data_accessor_1.responseDataAccessor) || this;
    }
    GetAllRequestBuilder.prototype.expand = function (first) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        this.requestConfig.expands = (0, util_1.variadicArgumentToArray)(first, rest);
        return this;
    };
    // TODO: Reconsider the OneToManyLink here
    /**
     * Add filter statements to the request.
     * @param expressions - Filter expressions to restrict the response
     * @returns The request builder itself, to facilitate method chaining
     */
    GetAllRequestBuilder.prototype.filter = function () {
        var expressions = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            expressions[_i] = arguments[_i];
        }
        this.requestConfig.filter = (0, odata_common_1.and)((0, odata_common_1.toFilterableList)(expressions));
        return this;
    };
    return GetAllRequestBuilder;
}(odata_common_1.GetAllRequestBuilder));
exports.GetAllRequestBuilder = GetAllRequestBuilder;
exports.GetAllRequestBuilderV4 = GetAllRequestBuilder;
//# sourceMappingURL=get-all-request-builder.js.map