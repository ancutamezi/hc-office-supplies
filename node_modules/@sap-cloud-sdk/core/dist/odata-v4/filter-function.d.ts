import moment from 'moment';
import { FilterFunctionParameterType, BooleanFilterFunction, NumberFilterFunction, StringFilterFunction } from '../odata-common/filter';
import { FilterFunctionReturnType as FilterFunctionReturnTypeBase } from '../odata-common/filter/filter-function';
import { CollectionFilterFunction } from '../odata-common/filter/collection-filter-function';
import { Entity } from './entity';
import { DateFilterFunction } from './filter/date-filter-function';
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'boolean', ...parameters: FilterFunctionParameterType<EntityT>[]): BooleanFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'int' | 'double' | 'decimal', ...parameters: FilterFunctionParameterType<EntityT>[]): NumberFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'string', ...parameters: FilterFunctionParameterType<EntityT>[]): StringFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'datetimeoffset', ...parameters: FilterFunctionParameterType<EntityT>[]): DateFilterFunction<EntityT>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'boolean[]', ...parameters: FilterFunctionParameterType<EntityT>[]): CollectionFilterFunction<EntityT, boolean>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'string[]', ...parameters: FilterFunctionParameterType<EntityT>[]): CollectionFilterFunction<EntityT, string>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'int[]' | 'double[]' | 'decimal[]', ...parameters: FilterFunctionParameterType<EntityT>[]): CollectionFilterFunction<EntityT, number>;
export declare function filterFunction<EntityT extends Entity>(functionName: string, returnType: 'datetimeoffset[]', ...parameters: FilterFunctionParameterType<EntityT>[]): CollectionFilterFunction<EntityT, moment.Moment>;
export { filterFunction as filterFunctionV4 };
declare type CollectionReturnType = 'datetimeoffset[]' | 'boolean[]' | 'int[]' | 'double[]' | 'decimal[]' | 'string[]';
declare type FilterFunctionReturnType = FilterFunctionReturnTypeBase | CollectionReturnType | 'datetimeoffset';
export { FilterFunctionReturnType as FilterFunctionReturnTypeV4 };
//# sourceMappingURL=filter-function.d.ts.map