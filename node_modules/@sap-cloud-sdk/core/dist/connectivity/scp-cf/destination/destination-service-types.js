"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinationType = exports.isDestination = exports.isDestinationNameAndJwt = exports.DestinationOrigin = void 0;
/**
 * @deprecated Since v1.0.1.
 *
 * Represents the origin of a destination in a multi-tenant setup on SAP Business Technology Platform.
 *
 * In a multi-tenant application on SAP Business Technology Platform, destinations can be defined both on provider account level ("PaaS tenant") as well as on the level of each subscriber account ("SaaS tenant").
 */
var DestinationOrigin;
(function (DestinationOrigin) {
    DestinationOrigin["Subscriber"] = "subscriber";
    DestinationOrigin["Provider"] = "provider";
})(DestinationOrigin = exports.DestinationOrigin || (exports.DestinationOrigin = {}));
function isDestinationNameAndJwt(destination) {
    return destination.destinationName !== undefined;
}
exports.isDestinationNameAndJwt = isDestinationNameAndJwt;
function isDestination(destination) {
    return destination.url !== undefined;
}
exports.isDestination = isDestination;
/**
 * The destinations endpoint distinguished between destinations maintained on service level (instance) and account level (subaccount).
 * This enum is used as a switch in the [[fetchInstanceDestinations]], [[fetchSubaccountDestinations]]  and [[destinationServiceCache]]
 */
var DestinationType;
(function (DestinationType) {
    DestinationType["Instance"] = "instance";
    DestinationType["Subaccount"] = "subaccount";
})(DestinationType = exports.DestinationType || (exports.DestinationType = {}));
//# sourceMappingURL=destination-service-types.js.map