import { Protocol } from './protocol';
import { Destination } from './destination/destination-service-types';
import { JwtPair } from './jwt';
/**
 * Given a destination and a JWT (required for subscriber destinations), this function will add a proxy configuration to a destination.
 * See also [[ProxyConfiguration]].
 *
 * This function will reject if no connectivity service is bound, no XSUAA service with plan application is bound or the client credentials grant with the XSUAA service fails.
 *
 * @Deprecated Since v1.16.0. Use [[addProxyConfigurationOnPrem]] instead.
 * @param destination - The destination to which the proxy configuration should be added.
 * @param jwt - The JWT of the current user.
 * @returns A promise resolving to the destination with the added proxy configuration.
 */
export declare function addProxyConfiguration(destination: Destination, jwt?: string): Promise<Destination>;
export declare function addProxyConfigurationOnPrem(destination: Destination, jwt: string | JwtPair | undefined): Promise<Destination>;
interface HostAndPort {
    host: string;
    port: number;
    protocol: Protocol.HTTP;
}
export declare function proxyHostAndPort(): HostAndPort;
export {};
//# sourceMappingURL=connectivity-service.d.ts.map