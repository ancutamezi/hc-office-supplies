"use strict";
/* eslint-disable valid-jsdoc */
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertToUriForEdmString = exports.uriConvertersCommon = void 0;
/**
 * @hidden
 */
exports.uriConvertersCommon = {
    'Edm.Binary': function (value) { return "X'".concat(value, "'"); },
    'Edm.Boolean': function (value) { return String(value); },
    'Edm.Byte': function (value) { return String(value); },
    'Edm.Int16': function (value) { return String(value); },
    'Edm.Int32': function (value) { return String(value); },
    'Edm.SByte': function (value) { return String(value); },
    'Edm.Int64': function (value) { return "".concat(value, "L"); },
    'Edm.Double': function (value) { return (isInfOrNan(value) ? value : "".concat(value, "D")); },
    'Edm.Single': function (value) { return (isInfOrNan(value) ? value : "".concat(value, "F")); },
    'Edm.Float': function (value) { return (isInfOrNan(value) ? value : "".concat(value, "F")); },
    'Edm.String': function (value) { return convertToUriForEdmString(value); },
    'Edm.Any': function (value) { return String(value); }
};
function isInfOrNan(value) {
    if (typeof value === 'number') {
        return false;
    }
    return ['inf', '-inf', 'nan'].includes(value.toLowerCase());
}
/**
 * @hidden
 */
function convertToUriForEdmString(value) {
    return "'".concat(value.replace(/'/g, "''"), "'");
}
exports.convertToUriForEdmString = convertToUriForEdmString;
//# sourceMappingURL=uri-value-converter.js.map