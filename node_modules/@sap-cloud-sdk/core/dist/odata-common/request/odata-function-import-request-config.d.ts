import { ODataUri } from '../uri-conversion';
import { FunctionImportParameters } from './function-import-parameter';
import { ODataRequestConfig, RequestMethodType } from './odata-request-config';
export declare abstract class ODataFunctionImportRequestConfig<ParametersT> extends ODataRequestConfig {
    readonly functionImportName: string;
    parameters: FunctionImportParameters<ParametersT>;
    protected oDataUri: ODataUri;
    /**
     * Creates an instance of ODataFunctionImportRequestConfig.
     * @param method - HTTP method for the request
     * @param defaultServicePath - Default path of the service
     * @param functionImportName - The name of the function import.
     * @param parameters - Object containing the parameters with a value and additional meta information
     */
    constructor(method: RequestMethodType, defaultServicePath: string, functionImportName: string, parameters: FunctionImportParameters<ParametersT>, oDataUri: ODataUri);
    abstract resourcePath(): string;
    abstract queryParameters(): Record<string, any>;
}
//# sourceMappingURL=odata-function-import-request-config.d.ts.map