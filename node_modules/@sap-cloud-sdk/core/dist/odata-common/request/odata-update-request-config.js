"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODataUpdateRequestConfig = void 0;
var odata_request_config_1 = require("./odata-request-config");
/**
 * OData update request configuration for an entity type.
 * @typeparam EntityT - Type of the entity to setup a request for
 */
var ODataUpdateRequestConfig = /** @class */ (function (_super) {
    __extends(ODataUpdateRequestConfig, _super);
    /**
     * Creates an instance of ODataUpdateRequestConfig.
     * @param _entityConstructor - Constructor type of the entity to create a configuration for
     */
    function ODataUpdateRequestConfig(_entityConstructor, oDataUri) {
        var _this = _super.call(this, UpdateStrategy.MODIFY_WITH_PATCH, _entityConstructor._defaultServicePath) || this;
        _this._entityConstructor = _entityConstructor;
        _this.oDataUri = oDataUri;
        _this.versionIdentifierIgnored = false;
        return _this;
    }
    ODataUpdateRequestConfig.prototype.resourcePath = function () {
        return this.oDataUri.getResourcePathForKeys(this.keys, this._entityConstructor);
    };
    ODataUpdateRequestConfig.prototype.queryParameters = function () {
        return this.prependDollarToQueryParameters({});
    };
    ODataUpdateRequestConfig.prototype.updateWithPut = function () {
        this.method = UpdateStrategy.REPLACE_WITH_PUT;
    };
    return ODataUpdateRequestConfig;
}(odata_request_config_1.ODataRequestConfig));
exports.ODataUpdateRequestConfig = ODataUpdateRequestConfig;
var UpdateStrategy;
(function (UpdateStrategy) {
    UpdateStrategy["MODIFY_WITH_PATCH"] = "patch";
    UpdateStrategy["REPLACE_WITH_PUT"] = "put";
})(UpdateStrategy || (UpdateStrategy = {}));
//# sourceMappingURL=odata-update-request-config.js.map