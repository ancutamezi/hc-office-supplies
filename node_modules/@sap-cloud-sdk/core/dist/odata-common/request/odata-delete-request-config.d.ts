import { Constructable, Entity } from '../entity';
import { FieldType } from '../selectable';
import { ODataUri } from '../uri-conversion';
import { ODataRequestConfig } from './odata-request-config';
import { WithKeys, WithETag } from './odata-request-traits';
/**
 * OData delete request configuration for an entity type.
 * @typeparam EntityT - Type of the entity to setup a request for
 */
export declare class ODataDeleteRequestConfig<EntityT extends Entity> extends ODataRequestConfig implements WithKeys, WithETag {
    readonly entityConstructor: Constructable<EntityT>;
    private oDataUri;
    keys: Record<string, FieldType>;
    eTag: string;
    versionIdentifierIgnored: boolean;
    /**
     * Creates an instance of ODataDeleteRequestConfig.
     * @param entityConstructor - Constructor type of the entity to create a configuration for
     */
    constructor(entityConstructor: Constructable<EntityT>, oDataUri: ODataUri);
    resourcePath(): string;
    queryParameters(): Record<string, any>;
}
//# sourceMappingURL=odata-delete-request-config.d.ts.map