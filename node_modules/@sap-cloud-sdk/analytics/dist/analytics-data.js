"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectIdentifier = exports.getAnalyticsData = void 0;
var fs_1 = __importDefault(require("fs"));
var os_1 = __importDefault(require("os"));
var path_1 = __importDefault(require("path"));
var util_1 = require("@sap-cloud-sdk/util");
var config_1 = require("./config");
var util_2 = require("./util");
var sdkModulePrefix = '@sap';
/**
 * Collects insensitive data for SAP Web Analytics.
 * For details, check the following blog post: https://blogs.sap.com/2018/10/23/usage-analytics-s4sdk/
 * @param config - Usage analytics config of the given project
 * @returns An object that includes information on project development environment
 * @hidden
 */
function getAnalyticsData(config) {
    return __awaiter(this, void 0, void 0, function () {
        var projectRootDir, packageJson;
        return __generator(this, function (_a) {
            projectRootDir = (0, util_1.findProjectRoot)(path_1.default.resolve());
            packageJson = JSON.parse(fs_1.default.readFileSync(path_1.default.resolve(projectRootDir, 'package.json'), 'utf8'));
            return [2 /*return*/, {
                    project_id: getProjectIdentifier(config, packageJson),
                    os: Object.values(getOperatingSystemInfo()).join(','),
                    node: getNodeVersion(),
                    npm: getNpmVersion(),
                    typescript: usesTypeScript(packageJson),
                    sdk_dependencies: getSapCloudSdkDependencies(packageJson),
                    third_party_dependencies: getThirdPartyDependencies(packageJson)
                }]; // SWA expects a certain column order: please do not change the order of this object!
        });
    });
}
exports.getAnalyticsData = getAnalyticsData;
function getProjectIdentifier(config, packageJson) {
    if (!config.salt) {
        throw Error('Salt is missing in config!');
    }
    config = (0, config_1.enforceValidConfig)(config);
    var projectName = packageJson.name + config.salt;
    return (0, util_2.hash)(projectName);
}
exports.getProjectIdentifier = getProjectIdentifier;
function usesTypeScript(packageJson) {
    var mergedDeps = __assign(__assign({}, packageJson.dependencies), packageJson.devDependencies);
    return mergedDeps.typescript ? 'true' : 'false';
}
function getSapCloudSdkDependencies(packageJson) {
    var dependencies = __assign(__assign({}, packageJson.dependencies), packageJson.devDependencies);
    return Object.entries(dependencies)
        .filter(function (_a) {
        var name = _a[0];
        return name.startsWith(sdkModulePrefix);
    })
        .map(function (dep) { return dep.join('@'); })
        .sort()
        .join(', ');
}
function getThirdPartyDependencies(packageJson) {
    var dependencies = __assign(__assign({}, packageJson.dependencies), packageJson.devDependencies);
    return Object.entries(dependencies)
        .filter(function (_a) {
        var name = _a[0];
        return !name.startsWith(sdkModulePrefix);
    })
        .map(function (dep) { return dep.join('@'); })
        .sort()
        .join(', ');
}
function getNpmVersion() {
    var userAgent = process.env.npm_config_user_agent;
    if (!userAgent) {
        return 'no version detected'; // Rather return something and get some data than throwing and getting no data
    }
    // Npm_config_user_agent has "npm/x.x.x node/x.x.x operatingSystemName architecture" format
    var npmInfo = userAgent.split(' ')[0];
    return sanitizeVersionFormat(npmInfo.slice(4));
}
function getNodeVersion() {
    var userAgent = process.env.npm_config_user_agent;
    if (!userAgent) {
        return 'no version detected'; // Rather return something and get some data than throwing and getting no data
    }
    var nodeInfo = userAgent.split(' ')[1];
    return sanitizeVersionFormat(nodeInfo.slice(5));
}
function sanitizeVersionFormat(version) {
    return version.startsWith('v') || version.startsWith('^')
        ? version.slice(1)
        : version;
}
function getOperatingSystemInfo() {
    return {
        name: os_1.default.platform(),
        version: os_1.default.release(),
        architecture: os_1.default.arch()
    };
}
//# sourceMappingURL=analytics-data.js.map