"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultFragmentContent = exports.setCommonDefaults = exports.FCL_ROUTER = void 0;
const path_1 = require("path");
exports.FCL_ROUTER = 'sap.f.routing.Router';
/**
 * Sets the common default values for all custom elements.
 *
 * @param config custom element configuration object
 * @param {string} manifestPath - path to the project's manifest.json
 * @param {Manifest} manifest - the application manifest
 * @returns enhanced configuration
 */
function setCommonDefaults(config, manifestPath, manifest) {
    // enforce naming conventions
    const firstChar = config.name[0];
    config.name = firstChar.toUpperCase() + config.name.substring(1);
    // set target folder if not provided
    config.folder = config.folder || `ext/${firstChar.toLocaleLowerCase() + config.name.substring(1)}`;
    // calculate namespace and path for generated artifacts
    config.ns = `${manifest['sap.app'].id}.${config.folder.replace(/[\/\\]/g, '.')}`;
    config.path = path_1.join(path_1.dirname(manifestPath), config.folder);
    return config;
}
exports.setCommonDefaults = setCommonDefaults;
/**
 * Method to generate default content for xml fragment.
 *
 * @param {string} text - text of button or label
 * @param {string} [eventHandler] - event handler path
 *      if value is passed then "Button" control with 'press' event would be generated
 *      if value is not passed then "Text" control would be generated
 * @returns default content for fragment
 */
function getDefaultFragmentContent(text, eventHandler) {
    let content;
    if (eventHandler) {
        const parts = eventHandler.split('.');
        const method = parts.pop();
        const handler = parts.join('/');
        content = `<Button core:require="{ handler: '${handler}'}" text="${text}" press="handler.${method}" />`;
    }
    else {
        content = `<Text text="${text}" />`;
    }
    return content;
}
exports.getDefaultFragmentContent = getDefaultFragmentContent;
//# sourceMappingURL=defaults.js.map