import type { FileData, ExtensionLogger } from '../../src';
import type { Location } from '../../src/extensionLogger';
import type { ExportResults } from '../../src/sync/common';
export declare class Logger implements ExtensionLogger {
    logInfo: string[];
    logWarning: string[];
    logError: string[];
    constructor();
    info(message: string, location?: Location): void;
    warning(message: string, location?: Location): void;
    error(message: string, location?: Location): void;
}
export declare function createTestLogger(): Logger;
/**
 * Returns the content of a list of files that are indicated by a list of file paths
 */
export declare function retrieveFileContent(path: string): string;
export declare function prepareFileData(path: string): FileData;
export declare function getSTTAAnnotations(): FileData[];
export declare function getSDV4Annotations(): FileData[];
export declare function getSTTAAnnotationsProdMan2(): FileData[];
export declare function getExtensionsProdMan2(): FileData[];
export declare function getSEPMRAAnnotations(): FileData[];
export declare function getExtensionsForS2pMmPurSrcgprojMaintains1(specificFiles?: string[]): FileData[];
export declare function findFlexChangeBySelector(exportResult: ExportResults, selectorId: string, property: string): object;
/**
 * Function to find out the flexChange from a list. Uses global variable exportResult
 *
 * @param {string} property Property for which the flexChange is to be found
 * @returns {object} contents of the flexChange
 */
export declare function findFlexChange(exportResult: ExportResults, property: string): object;
