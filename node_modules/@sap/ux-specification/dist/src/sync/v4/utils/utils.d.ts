import type { GenerateAppSchemaParameters, SapUiAppPageV4 } from '../../../v4';
import type { ExtensionLogger } from '../../..';
import type { LineItem, DataFieldForActionAbstractTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';
import type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';
import { DefinitionName } from '../../../v4';
import type { Definition } from 'typescript-json-schema';
/**
 * Common function for enhancing the LineItems definition of app schema by custom columns
 * @param appSchema - app-specific JSON schema
 * @param v4Page - actual page in the manifest
 * @param logger - logger for error messages
 * @param customColumnDefinitionName - custom column definition name
 * @param sectionId - identifier of the current object page section in schema
 * @param sectionIdInManifest - identifier of the current object page section in manifest
 */
export declare function addCustomColumnDefinition(appSchema: object, v4Page: SapUiAppPageV4, logger: ExtensionLogger, customColumnDefinitionName?: string, sectionId?: string, sectionIdInManifest?: string): void;
/**
 * Processes a LineItem record of type DataFieldForAction during app schema generation
 * @param appSchema - the app specific schema that shall get enhanced
 * @param entityType - the entity type as part of the AVT ConvertedMetadata
 * @param actions - actions definition in schema, parent object
 * @param lineItemPath - annotation path to the line item
 * @param lineItemRecord - actual record of the line item collection
 * @param recordIndex - record index in the collection
 */
export declare function handleActionRecord(appSchema: Definition, entityType: EntityType, actionsDefinition: Definition, lineItemPath: string, lineItemRecord: DataFieldForActionAbstractTypes, lineItemId: string, recordIndex: number): void;
/**
 * Adds the line item definition, columns and actions to the app schema (for the list report or an object page section comprising a table)
 * @param appSchema - the app specific schema that shall get enhanced
 * @param lineItemAnnotation - the UI.LineItem annotation, comprising all records
 * @param entityType - the entity type as part of the AVT ConvertedMetadata
 * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by Annotation Vocabularies Tool
 * @param lineItemId - in case of OP the parameter must be passed to distinguish the OP tables;
 *                     in case of LR or ALP 'LineItems' is passed.
 * @param columnDefinitionName - name of the column definition, i.e. TableColumn or ObjectPageTableColumn
 * @param customColumnDefinitionName - name of the custom column definition
 */
export declare function addLineItemsType(appSchema: Definition, lineItemAnnotation: AnnotationTerm<LineItem>, entityType: EntityType, oDataServiceAVT: ConvertedMetadata, lineItemId: string, columnDefinitionName?: string, customColumnDefinitionName?: string): void;
/**
 * Adds an enum or value help to position > anchor of custom column
 * @param appSchema - app specific JSON schema
 * @param lineItemId - ID of the current line item in schema
 * @param v4Page - current page in manifest
 * @param positionName - ID of the definition of custom column position in schema
 * @param sectionIdInManifest - identifier of the current object page section in manifest
 */
export declare function addFragmentEnumForAnchor(appSchema: Definition, lineItemId: string, v4Page: SapUiAppPageV4, positionName?: DefinitionName, sectionIdInManifest?: string): void;
/**
 * Find the relevant V4 page under the routing targets of manifest,json
 * @param pages - list of all pages in manifest
 * @param pageName - search criterion: page name
 * @param entitySet - search criterion: entity set
 * @param logger - logger for messages
 * @returns the page definition in manifest (if found)
 */
export declare function findPageV4(pages: SapUiAppPageV4[], pageName: string, entitySet: EntitySet, logger: ExtensionLogger): SapUiAppPageV4 | undefined;
/**
 * Depending on the template type, strip down the app schema so that only the relevant views are part of it
 * @param {Definition} appSchema - app specific JSON schema, to be adjusted
 * @param {GenerateAppSchemaParameters} generateParameters - object comprising all input parameters
 * @returns the right definition name for the table in the schema
 */
export declare function alignSchemaWithTemplateType(appSchema: Definition, generateParameters: GenerateAppSchemaParameters): DefinitionName.Table | DefinitionName.ALPTableView;
