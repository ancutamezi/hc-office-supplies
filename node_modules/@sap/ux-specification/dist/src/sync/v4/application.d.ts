import type { AppSettings as CommonSettingsV4, FlexibleColumnLayoutV4 } from '../../specification/v4/ApplicationV4';
import type { Application } from '../../specification/common/Application';
import type { Target, Manifest } from '../../specification/common';
import type { Pages } from '../../specification/v4';
export declare const getSettingsPathForPage: (pageName: string[]) => string;
export declare const getSettingsPathForLRViewsPaths: (pageName: string[]) => string;
export declare const getSettingsPathForHeaderOP: (pageName: string[]) => string;
export declare const getControlConfigurationPath: (pageName: string[]) => string;
export declare const getHeaderFacetSettingPath: (pageName: string[], _manifest: Manifest, sectionId: string) => string;
/**
 * Common function that calculates the path in manifest for table settings of a list report or ALP table view
 * @param pageName - page name in manifest
 * @param manifest - manifest (not used)
 * @param targetAnnotationEncoded - encoded target annotation (not used)
 * @param viewKey - view key (not used)
 * @param targetAnnotation - target annotation, i.e. the line item (with or without qualifier)
 * @returns - path as string
 */
export declare const getTableSettingsPathForView: (pageName: string[], _manifest: Manifest, _targetAnnotationEncoded: string, _viewKey: string, targetAnnotation: string) => string;
export declare const getExportSectionId: (sectionId: any) => string;
export declare const getTableSettingsPathForLR: (pageName: string[], manifest: Manifest, targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getQuickVariantPath: (pageName: string[], manifest: Manifest, targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getColumnsPathForView: (pageName: string[], _manifest: Manifest, targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getColumnsPathForLR: (pageName: string[], manifest: Manifest, targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getActionsPathForView: (pageName: string[], _manifest: Manifest, _targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getActionsPathForLR: (pageName: string[], manifest: Manifest, targetAnnotationEncoded: string, columnKey: string, targetAnnotation: string) => string;
export declare const getColumnsPathForOP: (pageName: string[], _manifest: Manifest, sectionId: string, columnKey: string) => string;
export declare const getActionsPathForOP: (pageName: string[], _manifest: Manifest, sectionId: string, columnKey: string) => string;
export declare const getTableSettingsPathForOP: (pageName: string[], _manifest: Manifest, sectionId: string) => string;
export declare const getCustomSectionPath: (pageName: string[], _manifest: Manifest, sectionId: string, pathPart?: string) => string;
export declare class ApplicationV4 implements Application {
    $schema?: string;
    id?: string;
    pages?: Pages;
    home?: string;
    target?: Target;
    settings?: AppSettings;
}
export declare class AppSettings implements CommonSettingsV4 {
    title?: string;
    description?: string;
    flexibleColumnLayout?: FlexibleColumnLayoutV4;
    flexEnabled?: boolean;
}
