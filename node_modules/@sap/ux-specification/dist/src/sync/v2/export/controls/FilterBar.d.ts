import type { FilterType, DateRangeType, DefaultDateRangeValueType, DateRange as DateRangeInterface, CommonFilterBar as FilterBarConfig, SelectionFields as SelectionFieldsConfig, DefaultDateRange as DefaultDateRangeConfig, ListReportFilterBar as ListReportFilterBarIF, AnalyticalListPageFilterBar as AnalyticalListPageFilterBarIF, SelectionFieldDateSettings as SelectionFieldDateSettingsConfig } from '../../../../specification/v2';
import { SelectionField } from '../../../../specification/v2';
export declare function importDateSettings(manifestSection: object): DateRange;
export declare function exportDateSettingsField(manifestSection: unknown, configPart: DateRange, key: string): void;
export declare class DateRange implements DateRangeInterface {
    useDateRange?: boolean;
    selectedValues?: DateRangeType[];
    exclude?: boolean;
}
export declare class DefaultDateRange implements DefaultDateRangeConfig {
    operation: DefaultDateRangeValueType;
}
export declare class SelectionFieldDateSettings implements SelectionFieldDateSettingsConfig {
    selectedValues?: DateRangeType[];
    exclude?: boolean;
    customDateRangeImplementation?: string;
    filter?: FilterType[];
    defaultValue?: DefaultDateRange;
}
export declare class SelectionFields implements SelectionFieldsConfig {
    [key: string]: SelectionField | SelectionFieldDateSettings;
}
export declare class CommonFilterBar implements FilterBarConfig {
    smartVariantManagement?: boolean;
    liveMode?: boolean;
    variantManagementHidden: boolean;
    subTitleIfVariantMgmtHidden?: string;
    dateSettings?: DateRange;
    selectionFields?: SelectionFields;
    showClearOnFB?: boolean;
    showFilterConfiguration?: boolean;
    showRestoreOnFB?: boolean;
}
export declare class AnalyticalListPageFilterBar extends CommonFilterBar implements AnalyticalListPageFilterBarIF {
    showGoButtonOnFilterBar?: boolean;
    filterDefaultsFromSelectionVariant?: boolean;
}
export declare class ListReportFilterBar extends CommonFilterBar implements ListReportFilterBarIF {
    annotationPath?: string;
}
