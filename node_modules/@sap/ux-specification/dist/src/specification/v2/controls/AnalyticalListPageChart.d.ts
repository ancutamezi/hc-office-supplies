export declare enum ChartType {
    bar = "bar",
    column = "column",
    line = "line",
    combination = "combination",
    pie = "pie",
    donut = "donut",
    scatter = "scatter",
    bubble = "bubble",
    heatmap = "heatmap",
    bullet = "bullet",
    verticalBullet = "vertical_bullet",
    stackedBar = "stacked_bar",
    stackedColumn = "stacked_column",
    stackedCombination = "stacked_combination",
    horizontalStackedCombination = "horizontal_stacked_combination",
    dualBar = "dual_bar",
    dualColumn = "dual_column",
    dualLine = "dual_line",
    dualStackedBar = "dual_stacked_bar",
    dualStackedColumn = "dual_stacked_column",
    dualCombination = "dual_combination",
    dualStackedCombination = "dual_stacked_combination",
    dualHorizontalCombination = "dual_horizontal_combination",
    dualHorizontalStackedCombination = "dual_horizontal_stacked_combination",
    hundredStackedBar = "100_stacked_bar",
    hundredStackedColumn = "100_stacked_column",
    hundredDualStackedBar = "100_dual_stacked_bar",
    hundredDualStackedColumn = "100_dual_stacked_column",
    waterfall = "waterfall",
    horizontalWaterfall = "horizontal_waterfall"
}
/**
 * Chart
 * @isViewNode true
 */
export interface ChartSettings {
    /**
     * Controls the visibility of the legend button.
     */
    showLegendButton?: boolean;
    /**
     * Controls the visibility of the chart download button.
     */
    showDownloadButton?: boolean;
    /**
     * Controls the visibility of the chart type button.
     */
    showChartTypeSelectionButton?: boolean;
    /**
     * Comma-separated value fields do not showup in the list of available chart types.
     */
    ignoredChartTypes?: ChartType[];
    /**
     * Controls the visibility of the data label.
     */
    showDataLabel?: boolean;
}
