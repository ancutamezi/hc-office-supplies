/**
 * This file is is based on a json schema to typescript generator and adjusted to our needs.
 * JSON schema source: https://github.wdf.sap.corp/AppDescriptor/manifest/blob/master/schema/sap.ovp/subschema_sapovp.json
 */
import type { PageConfig } from '../../common/page';
import type { ListCard, AnalyticalCard, StackCard, LinklistCard, TableCard, CustomCard } from '../controls/Card';
import type { DateRange, DateRangeType, DefaultDateRange, FilterType } from '../controls/FilterBar';
/**
 * @isViewNode false
 */
export interface SelectedValues {
    /**
     * The selectedValues property is a set of standard date range values that you want to include or exclude.
     */
    selectedValues?: DateRangeType[];
    /**
     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.
     */
    exclude?: boolean;
    /**
     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.
     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.
     */
    customDateRangeImplementation?: string;
    /**
     * You can use the filter settings to include and exclude specific date range values.
     */
    filter?: FilterType[];
    /**
     * You can set a default value for semantic date range.
     */
    defaultValue?: DefaultDateRange;
}
export interface DateRangeOVP extends DateRange {
    /**
     * For a fields' list you can define the set of standard date range values separately.
     */
    fields?: {
        [field: string]: SelectedValues;
    };
}
export declare type FilterSettingsType = {
    /**
     * You can define date ranges, such as lastYear or nextQuarter on the Smart Filter Bar
     */
    dateSettings?: DateRangeOVP;
};
export declare enum ContainerLayoutType {
    fixed = "fixed",
    resizable = "resizable"
}
export declare type CardType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;
export declare type ChartSettingsType = {
    /**
     * Set the showDataLabel property to true to make data labels visible in analytical cards.
     */
    showDataLabel?: boolean;
};
export interface OverviewPageConfig extends PageConfig {
    /**
     * globalFilterModel defines the OData model that contains entity definitions relevant for global filters.
     */
    globalFilterModel?: string;
    /**
     * globalFilterEntityType defines the entity type to use as a global filter in the smart filter bar control.
     */
    globalFilterEntityType?: string;
    /**
     * globalFilterEntitySet defines the entity set to use as global filter in the smart filter bar control.
     */
    globalFilterEntitySet?: string;
    /**
     * containerLayout represents the layout of the card container, as fixed or resizable. The default value is fixed.
     */
    containerLayout?: ContainerLayoutType;
    /**
     * Set smartVariantRequired to false to deactivate smart variant management in the global filters. The default value is true.
     */
    smartVariantRequired?: boolean;
    /**
     * Set showDateInRelativeFormat to true to enable relative or normal date formatting in OVP applications.
     */
    showDateInRelativeFormat?: boolean;
    /**
     * Set enableLiveFilter to true to activate a live update in the global filter. The default requires the user to click the Go button..
     */
    enableLiveFilter?: boolean;
    /**
     * imageSupported allows the condensed list card to show images or icons.
     */
    imageSupported?: boolean;
    /**
     * considerAnalyticalParameters enables analytical parameter support for the smart filter bar.
     */
    considerAnalyticalParameters?: boolean;
    /**
     * refreshIntervalInMinutes represents the time interval in minutes to auto refresh the card models.
     */
    refreshIntervalInMinutes?: number;
    /**
     * Set useDateRangeType to true to enable semantic date range control for the smart filter bar.
     */
    useDateRangeType?: boolean;
    /**
     * Define settings for analytical charts.
     */
    chartSettings?: ChartSettingsType;
    /**
     * The global filter lets end users filter the data displayed on one or more cards.
     */
    filterSettings?: FilterSettingsType;
    /**
     * Determines if the basic search shall be part of the global filters.
     */
    showBasicSearch?: boolean;
    /**
     * Disables the error page of OVP. Error page in OVP appears only when all cards have failed.
     */
    disableErrorPage?: boolean;
    /**
     * Shows smart filter bar in expanded mode.
     */
    bHeaderExpanded?: boolean;
    /**
     * Cards
     * @isViewNode true
     */
    cards?: {
        [k: string]: CardType;
    };
}
