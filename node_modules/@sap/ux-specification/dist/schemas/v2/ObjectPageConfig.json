{
  "type": "object",
  "properties": {
    "showConfirmationOnDraftActivate": {
      "description": "Set showConfirmationOnDraftActivate to true to enable a confirmation before a save if you have pending warnings.",
      "type": "boolean",
      "artifactType": "Manifest"
    },
    "hideChevronForUnauthorizedExtNav": {
      "description": "If you set this property to true, the navigation chevron is hidden in case the launchpad indicates that the user has no authorization to navigate.",
      "type": "boolean",
      "artifactType": "Manifest"
    },
    "allowDeepLinking": {
      "description": "allowDeepLinking restricts deep linking to certain object page levels.",
      "type": "boolean",
      "artifactType": "Manifest"
    },
    "navToListOnSave": {
      "description": "If you set navToListOnSave to true, the application will navigate back to the list on a save.",
      "type": "boolean",
      "artifactType": "Manifest"
    },
    "defaultLayoutTypeIfExternalNavigation": {
      "description": "If this flag is set, then during inbound navigation to flexible column layout application, if the navigation context points to a unique object, then the object page is opened in full screen mode.",
      "type": "string",
      "enum": [
        "MidColumnFullScreen"
      ],
      "artifactType": "Manifest"
    },
    "globalChartSettings": {
      "$ref": "#/definitions/GlobalChartSettings",
      "description": "Settings for all charts on an object page",
      "artifactType": "Manifest"
    },
    "header": {
      "$ref": "#/definitions/ObjectPageHeader<GenericActions>"
    },
    "layout": {
      "$ref": "#/definitions/ObjectPageLayout"
    },
    "sections": {
      "anyOf": [
        {
          "$ref": "#/definitions/GenericSections"
        },
        {
          "$ref": "#/definitions/CustomSections"
        }
      ]
    },
    "footer": {
      "$ref": "#/definitions/ObjectPageFooter<ObjectPageFooterActions>"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "GlobalChartSettings": {
      "type": "object",
      "properties": {
        "variantManagement": {
          "description": "To enable variant management for charts in an object page",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeader<GenericActions>": {
      "description": "Header",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "showRelatedApps": {
          "description": "Set showRelatedApps to true to show the navigation button for related apps.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "editableHeaderContent": {
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "simpleHeaderFacets": {
          "description": "Set simpleHeaderFacets to true to use simpler header facets.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "displayShape": {
          "pattern": "^(Circle|Square)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "$ref": "#/definitions/AvatarShape"
            },
            {
              "type": "string"
            }
          ],
          "description": "With displayShape you can define the shape of the avatar.",
          "artifactType": "FlexChange",
          "controlType": "sap.f.Avatar"
        },
        "actions": {
          "$ref": "#/definitions/GenericActions",
          "description": "Set properties of actions on Object Page Header"
        }
      },
      "additionalProperties": false
    },
    "AvatarShape": {
      "enum": [
        "Circle",
        "Square"
      ],
      "type": "string"
    },
    "GenericActions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/HeaderAction"
      }
    },
    "HeaderAction": {
      "description": "Header Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the button should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageHeaderActionButton"
        },
        "tooltip": {
          "description": "The text of the button tooltip, preferably as an i18n key.",
          "i18nClassification": "ACT: Text for tooltip of button.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageHeaderActionButton"
        },
        "icon": {
          "description": "Icon to be displayed as graphical element within the Button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageHeaderActionButton"
        },
        "activeIcon": {
          "description": "Alternative icon for the active (depressed) state of the button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageHeaderActionButton"
        },
        "type": {
          "$ref": "#/definitions/ButtonType",
          "description": "Defines the Button type.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageHeaderActionButton"
        }
      },
      "additionalProperties": false
    },
    "ButtonType": {
      "description": "Different predefined button types for the {@link sap.m.Button sap.m.Button}.",
      "enum": [
        "Accept",
        "Attention",
        "Back",
        "Critical",
        "Default",
        "Emphasized",
        "Ghost",
        "Negative",
        "Neutral",
        "Reject",
        "Success",
        "Transparent",
        "Unstyled",
        "Up"
      ],
      "type": "string"
    },
    "ObjectPageLayout": {
      "description": "Page Layout",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "showHeaderContent": {
          "description": "showHeaderContent determines the visibility of the Header content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageLayout"
        },
        "showAnchorBar": {
          "description": "showAnchorBar determines whether the navigation bar (anchor bar) is displayed.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageLayout"
        },
        "useIconTabBar": {
          "description": "useIconTabBar determines whether the navigation mode is tab-based instead of based on the default anchor bar.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageLayout"
        },
        "alwaysShowContentHeader": {
          "description": "alwaysShowContentHeader determines whether header content will always be expanded on desktop.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageLayout"
        }
      },
      "additionalProperties": false
    },
    "GenericSections": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionFormV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionTableV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionChartV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionContactV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionAddressV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSubSectionV2"
          }
        ]
      }
    },
    "ObjectPageSectionV2": {
      "description": "Section",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionFormV2": {
      "description": "Form",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "form": {
          "$ref": "#/definitions/ObjectPageForm"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageForm": {
      "description": "Object Page Form",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "fields": {
          "$ref": "#/definitions/ObjectPageFormFields"
        },
        "actions": {
          "$ref": "#/definitions/ObjectPageFormActions"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFormFields": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Field"
      }
    },
    "Field": {
      "description": "Field",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the field should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smartform.SmartGroup"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFormActions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/FormAction"
      }
    },
    "FormAction": {
      "description": "Form Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the button should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "tooltip": {
          "description": "The text of the button tooltip, preferably as an i18n key.",
          "i18nClassification": "ACT: Text for tooltip of button.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "icon": {
          "description": "Icon to be displayed as graphical element within the Button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "activeIcon": {
          "description": "Alternative icon for the active (depressed) state of the button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "type": {
          "$ref": "#/definitions/ButtonType",
          "description": "Defines the Button type.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionTableV2": {
      "description": "Table",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "table": {
          "anyOf": [
            {
              "$ref": "#/definitions/ObjectPageResponsiveTableWithMultiSelect"
            },
            {
              "$ref": "#/definitions/ObjectPageResponsiveTableWithInlineDelete"
            },
            {
              "$ref": "#/definitions/ObjectPageAnalyticalTable"
            },
            {
              "$ref": "#/definitions/ObjectPageGridTable"
            },
            {
              "$ref": "#/definitions/ObjectPageTreeTable"
            }
          ]
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageResponsiveTableWithMultiSelect": {
      "description": "Table",
      "isViewNode": true,
      "controlProperty": "type",
      "type": "object",
      "properties": {
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "ResponsiveTable"
          ],
          "artifactType": "Manifest"
        },
        "includeItemInSelection": {
          "description": "Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "popinLayout": {
          "pattern": "^(Block|GridLarge|GridSmall)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "$ref": "#/definitions/PopinLayout"
            },
            {
              "type": "string"
            }
          ],
          "description": "popinLayout defines the layout in which the table pop-in rows shall be rendered.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "growingThreshold": {
          "description": "growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
          "type": "number",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "createWithParameterDialog": {
          "$ref": "#/definitions/Fields4DialogOP",
          "description": "You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.",
          "artifactType": "Manifest"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionOP",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.",
          "artifactType": "Manifest"
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "exportType": {
          "$ref": "#/definitions/smarttable.ExportType",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ],
          "artifactType": "Manifest"
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variantManagement": {
          "description": "To enable variant management for a specific table on an object page.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns",
          "description": "Columns"
        }
      },
      "additionalProperties": false
    },
    "PopinLayout": {
      "enum": [
        "Block",
        "GridLarge",
        "GridSmall"
      ],
      "type": "string"
    },
    "Fields4DialogOP": {
      "type": "object",
      "properties": {
        "fields": {
          "$ref": "#/definitions/CreationFieldKeysOP",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "fields"
      ]
    },
    "CreationFieldKeysOP": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/FieldPathOP"
      }
    },
    "FieldPathOP": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "path"
      ]
    },
    "QuickVariantSelectionOP": {
      "type": "object",
      "properties": {
        "showCounts": {
          "description": "To show the number of records available, set showCounts to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variants": {
          "description": "The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[0-9]+$": {
              "$ref": "#/definitions/QuickVariant"
            }
          },
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "variants"
      ]
    },
    "QuickVariant": {
      "type": "object",
      "properties": {
        "key": {
          "description": "A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.",
          "type": "string"
        },
        "annotationPath": {
          "description": "Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath",
        "key"
      ]
    },
    "smarttable.ExportType": {
      "description": "Provides the type of services available for export in the `SmartTable` control.",
      "enum": [
        "GW",
        "UI5Client"
      ],
      "type": "string"
    },
    "ObjectPageToolBar": {
      "description": "Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageToolBarActions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "ObjectPageToolBarActions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ObjectPageToolBarAction"
      }
    },
    "ObjectPageToolBarAction": {
      "description": "ToolBar Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the button should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "tooltip": {
          "description": "The text of the button tooltip, preferably as an i18n key.",
          "i18nClassification": "ACT: Text for tooltip of button.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "icon": {
          "description": "Icon to be displayed as graphical element within the Button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "activeIcon": {
          "description": "Alternative icon for the active (depressed) state of the button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "type": {
          "$ref": "#/definitions/ButtonType",
          "description": "Defines the Button type.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        }
      },
      "additionalProperties": false
    },
    "GenericColumns": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/TableColumn"
          },
          {
            "$ref": "#/definitions/TableColumnAction"
          },
          {
            "description": "Custom Columns",
            "isViewNode": true,
            "type": "array",
            "items": {
              "$ref": "#/definitions/TableCustomColumn"
            }
          }
        ]
      }
    },
    "TableColumn": {
      "description": "Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "The width property defines the width of the column.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Column"
        },
        "hAlign": {
          "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "$ref": "#/definitions/TextAlign"
            },
            {
              "type": "string"
            }
          ],
          "description": "The hAlign property defines the horizontal alignment of the column content.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Column"
        }
      },
      "additionalProperties": false
    },
    "TextAlign": {
      "description": "Configuration options for text alignments.",
      "enum": [
        "Begin",
        "Center",
        "End",
        "Initial",
        "Left",
        "Right"
      ],
      "type": "string"
    },
    "TableColumnAction": {
      "description": "Column Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "tooltip": {
          "description": "The text of the button tooltip, preferably as an i18n key.",
          "i18nClassification": "ACT: Text for tooltip of button.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "icon": {
          "description": "Icon to be displayed as graphical element within the Button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "activeIcon": {
          "description": "Alternative icon for the active (depressed) state of the button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "type": {
          "$ref": "#/definitions/ButtonType",
          "description": "Defines the Button type.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "width": {
          "description": "The width property defines the width of the column.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Column"
        },
        "hAlign": {
          "pattern": "^(Begin|Center|End|Initial|Left|Right)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "$ref": "#/definitions/TextAlign"
            },
            {
              "type": "string"
            }
          ],
          "description": "The hAlign property defines the horizontal alignment of the column content.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Column"
        }
      },
      "additionalProperties": false
    },
    "TableCustomColumn": {
      "description": "Custom Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "id": {
          "description": "In case the fragment needs to be re-used for multiple tabs, the id property must be set to make the ids unique.",
          "type": "string"
        },
        "text": {
          "description": "The label of the custom column, preferably as an i18n key.",
          "i18nClassification": "COL: Custom column header text",
          "type": "string"
        },
        "columnKey": {
          "description": "The column key",
          "type": "string"
        },
        "columnIndex": {
          "description": "The index of the column in the overall collection; if undefined, the custom column will be added at the end of the table.",
          "type": "number"
        },
        "leadingProperty": {
          "description": "If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.",
          "type": "string"
        },
        "className": {
          "description": "The UI5 control used for your extension",
          "type": "string",
          "enum": [
            "sap.ui.core.Fragment"
          ]
        },
        "fragmentName": {
          "description": "The relative path to your fragment with path segments separated by '.'. The first element is the app ID.",
          "type": "string"
        },
        "cellsFragmentName": {
          "description": "In case of a responsive table, you additionally need to specify a fragment for the table cells.",
          "type": "string"
        },
        "tabKey": {
          "description": "If you use QuickVariantSelectionX, you need to define the extensions per tab. 'tabKey' is the key provided when defining the QuickVariantSelectionX.",
          "type": "string"
        },
        "extensionType": {
          "$ref": "#/definitions/TableColumnExtensionTypeV2",
          "description": "Type of custom column view extension."
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "columnKey",
        "extensionType",
        "fragmentName"
      ]
    },
    "TableColumnExtensionTypeV2": {
      "enum": [
        "AnalyticalTableColumnsExtension",
        "GridTableColumnsExtension",
        "ResponsiveTableColumnsExtension",
        "TreeTableColumnsExtension"
      ],
      "type": "string"
    },
    "ObjectPageResponsiveTableWithInlineDelete": {
      "description": "Table",
      "isViewNode": true,
      "controlProperty": "type",
      "type": "object",
      "properties": {
        "inlineDelete": {
          "description": "Used to enable inline deletion in a responsive table of list report and object page",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "ResponsiveTable"
          ],
          "artifactType": "Manifest"
        },
        "includeItemInSelection": {
          "description": "Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "popinLayout": {
          "pattern": "^(Block|GridLarge|GridSmall)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "$ref": "#/definitions/PopinLayout"
            },
            {
              "type": "string"
            }
          ],
          "description": "popinLayout defines the layout in which the table pop-in rows shall be rendered.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "growingThreshold": {
          "description": "growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.",
          "type": "number",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Table"
        },
        "createWithParameterDialog": {
          "$ref": "#/definitions/Fields4DialogOP",
          "description": "You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.",
          "artifactType": "Manifest"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionOP",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.",
          "artifactType": "Manifest"
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "exportType": {
          "$ref": "#/definitions/smarttable.ExportType",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ],
          "artifactType": "Manifest"
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variantManagement": {
          "description": "To enable variant management for a specific table on an object page.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns",
          "description": "Columns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageAnalyticalTable": {
      "description": "Table",
      "isViewNode": true,
      "controlProperty": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "AnalyticalTable"
          ],
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "createWithParameterDialog": {
          "$ref": "#/definitions/Fields4DialogOP",
          "description": "You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.",
          "artifactType": "Manifest"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionOP",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.",
          "artifactType": "Manifest"
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "exportType": {
          "$ref": "#/definitions/smarttable.ExportType",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ],
          "artifactType": "Manifest"
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variantManagement": {
          "description": "To enable variant management for a specific table on an object page.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns",
          "description": "Columns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageGridTable": {
      "description": "Table",
      "isViewNode": true,
      "controlProperty": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "GridTable"
          ],
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "createWithParameterDialog": {
          "$ref": "#/definitions/Fields4DialogOP",
          "description": "You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.",
          "artifactType": "Manifest"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionOP",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.",
          "artifactType": "Manifest"
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "exportType": {
          "$ref": "#/definitions/smarttable.ExportType",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ],
          "artifactType": "Manifest"
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variantManagement": {
          "description": "To enable variant management for a specific table on an object page.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns",
          "description": "Columns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageTreeTable": {
      "description": "Table",
      "isViewNode": true,
      "controlProperty": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "TreeTable"
          ],
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "createWithParameterDialog": {
          "$ref": "#/definitions/Fields4DialogOP",
          "description": "You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.",
          "artifactType": "Manifest"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionOP",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.",
          "artifactType": "Manifest"
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "exportType": {
          "$ref": "#/definitions/smarttable.ExportType",
          "description": "Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.",
          "artifactType": "FlexChange",
          "controlType": "sap.ui.comp.smarttable.SmartTable"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ],
          "artifactType": "Manifest"
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "variantManagement": {
          "description": "To enable variant management for a specific table on an object page.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns",
          "description": "Columns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionChartV2": {
      "description": "Chart",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "chart": {
          "$ref": "#/definitions/ObjectPageChart"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageChart": {
      "description": "Chart",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "variantManagement": {
          "description": "To enable variant management for charts in an object page",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionContactV2": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionAddressV2": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSubSectionV2": {
      "description": "Subsection",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "subsections": {
          "$ref": "#/definitions/GenericSubSections"
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSubSection"
        }
      },
      "additionalProperties": false
    },
    "GenericSubSections": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionFormV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionTableV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionChartV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSubSectionContactV2"
          },
          {
            "$ref": "#/definitions/ObjectPageSubSectionAddressV2"
          }
        ]
      }
    },
    "ObjectPageSubSectionContactV2": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSubSection"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSubSectionAddressV2": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the section should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.uxap.ObjectPageSubSection"
        }
      },
      "additionalProperties": false
    },
    "CustomSections": {
      "description": "Custom Sections",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "custom": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ObjectPageCustomSectionView"
              },
              {
                "$ref": "#/definitions/ObjectPageCustomSectionFragment"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "ObjectPageCustomSectionView": {
      "description": "View",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "enum": [
            "sap.ui.core.mvc.View"
          ]
        },
        "viewName": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ViewTypes"
        },
        "relatedFacet": {
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition"
        },
        "title": {
          "description": "The label of the custom section, preferably as an i18n key",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "relatedFacet",
        "relativePosition",
        "title",
        "type",
        "viewName"
      ]
    },
    "ViewTypes": {
      "enum": [
        "HTML",
        "JS",
        "JSON",
        "XML"
      ],
      "type": "string"
    },
    "SectionPosition": {
      "enum": [
        "AfterFacet",
        "BeforeFacet",
        "ReplaceFacet"
      ],
      "type": "string"
    },
    "ObjectPageCustomSectionFragment": {
      "description": "Fragment",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "enum": [
            "sap.ui.core.Fragment"
          ]
        },
        "fragmentName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "XML"
          ]
        },
        "relatedFacet": {
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition"
        },
        "title": {
          "description": "The label of the custom section, preferably as an i18n key",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "fragmentName",
        "relatedFacet",
        "relativePosition",
        "title",
        "type"
      ]
    },
    "ObjectPageFooter<ObjectPageFooterActions>": {
      "description": "Footer",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageFooterActions"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFooterActions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ObjectPageFooterAction"
      }
    },
    "ObjectPageFooterAction": {
      "description": "Footer Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "visible": {
          "pattern": "^(false|true)$|^{[A-Za-z0-9{}&$!@#? _|,<>'()[\\]\\/:=.]+}$",
          "anyOf": [
            {
              "enum": [
                false,
                true,
                "{ui>/editable}",
                "{= !${ui>/editable}}"
              ]
            },
            {
              "type": "string"
            }
          ],
          "description": "Whether the button should be visible on the screen.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "tooltip": {
          "description": "The text of the button tooltip, preferably as an i18n key.",
          "i18nClassification": "ACT: Text for tooltip of button.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "icon": {
          "description": "Icon to be displayed as graphical element within the Button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "activeIcon": {
          "description": "Alternative icon for the active (depressed) state of the button. Can be an image or icon from the icon font (https://sapui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.",
          "type": "string",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        },
        "type": {
          "$ref": "#/definitions/ButtonType",
          "description": "Defines the Button type.",
          "artifactType": "FlexChange",
          "controlType": "sap.m.Button"
        }
      },
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}