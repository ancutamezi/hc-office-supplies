{
  "type": "object",
  "properties": {
    "header": {
      "$ref": "#/definitions/ObjectPageHeader<GenericActions>"
    },
    "layout": {
      "$ref": "#/definitions/ObjectPageLayout"
    },
    "variantManagement": {
      "$ref": "#/definitions/VariantManagementTypeObjectPage",
      "description": "variantManagement defines how the variant management of page personalizations is controlled.\n- None - No variant management by default.\n- Control - Individual personalizations for each control.",
      "artifactType": "Manifest"
    },
    "sections": {
      "anyOf": [
        {
          "$ref": "#/definitions/GenericSections"
        },
        {
          "$ref": "#/definitions/CustomSections"
        }
      ]
    },
    "footer": {
      "$ref": "#/definitions/ObjectPageFooter<ObjectPageFooterActions>"
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "ObjectPageHeader<GenericActions>": {
      "description": "Header",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "editableHeaderContent": {
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showRelatedApps": {
          "description": "Set showRelatedApps to true to show the navigation button for related apps.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "visible": {
          "description": "Set visible to true to make the header visible.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "anchorBarVisible": {
          "description": "Set visible to true to make the anchor bar visible.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "actions": {
          "$ref": "#/definitions/GenericActions"
        },
        "sections": {
          "$ref": "#/definitions/HeaderSections"
        }
      },
      "additionalProperties": false
    },
    "GenericActions": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      }
    },
    "HeaderSections": {
      "description": "Header Sections",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/CommonHeaderFacetSettings"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionForm"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionContact"
          },
          {
            "$ref": "#/definitions/ObjectPageHeaderSectionAddress"
          }
        ]
      }
    },
    "CommonHeaderFacetSettings": {
      "type": "object",
      "properties": {
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "FlexSettings": {
      "type": "object",
      "properties": {
        "designtime": {
          "description": "You can restrict the adaptability of header facets via the setting 'flexSettings'/'designtime'. 'not-adaptable-visibility' means that 'remove' and 'add' are not possible, but 'move' is enabled.",
          "type": "string",
          "enum": [
            "not-adaptable-visibility"
          ],
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderSectionForm": {
      "type": "object",
      "properties": {
        "form": {
          "description": "Form",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderSectionContact": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageHeaderSectionAddress": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        },
        "stashed": {
          "description": "Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "flexSettings": {
          "$ref": "#/definitions/FlexSettings",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageLayout": {
      "description": "Page Layout",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "sectionLayout": {
          "$ref": "#/definitions/SectionLayoutType",
          "description": "sectionLayout defines the layout of the sections. The default is \"Page\" (all sections in one page), possible values are \"Page\" and \"Tabs\" (every section in its own tab).",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SectionLayoutType": {
      "enum": [
        "Page",
        "Tabs"
      ],
      "type": "string"
    },
    "VariantManagementTypeObjectPage": {
      "enum": [
        "Control",
        "None"
      ],
      "type": "string"
    },
    "GenericSections": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionTableV4"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionForm"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionDataPoint"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionContact"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionAddress"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionPresentationVariant"
          }
        ]
      }
    },
    "ObjectPageSectionTableV4": {
      "description": "Table Section",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "table": {
          "$ref": "#/definitions/ObjectPageTable"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageTable": {
      "description": "Table",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableFullScreen": {
          "description": "By setting enableFullScreen to true you can enable the full screen mode for this table; this will display a new button on the table toolbar allowing the user to open the table in a fullscreen dialog.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enablePaste": {
          "description": "In the Object Page tables, it is possible to add several items at a time by copying and pasting data from an excel file, if this property is set to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Tool Bar"
        },
        "creationMode": {
          "$ref": "#/definitions/TableCreationModeOP",
          "description": "Defines the page behavior when a new record is created.",
          "artifactType": "Manifest"
        },
        "personalization": {
          "$ref": "#/definitions/PersonalizationTypeOP",
          "description": "Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\nBy default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\nOmitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.",
          "artifactType": "Manifest"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelectionV4OP",
          "description": "With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.",
          "artifactType": "Manifest"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumnsOP"
        },
        "type": {
          "$ref": "#/definitions/TableTypeV4",
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "artifactType": "Manifest"
        },
        "selectionMode": {
          "$ref": "#/definitions/SelectionMode",
          "description": "Applications can influence whether the table rows are selectable or not, and whether it allows for single selection or multiple selection. It can take the following values:\n- \"Auto\": This is the default value. In this mode, Fiori Elements first checks if there are any custom actions or IBN buttons in the table toolbar that require a context. If no such buttons are found, then no table selection is allowed in display mode. In edit mode too a selection is not allowed unless there is a Delete button in the table toolbar in which case multiple row selection will be allowed.\n- \"Multi\": This will allow end users to select multiple table records (in both display and edit mode)\n- \"Single\" This will allow end user to select only a single table record (in both display and edit mode)\n- \"None\": This will not allow the end user to select any table record in display mode. This will also be the case in edit mode unless the table has a delete button enabled, in which multiple selection is allowed in delete mode.",
          "artifactType": "Manifest"
        },
        "selectAll": {
          "description": "The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "selectionLimit": {
          "description": "With the selectionLimit you can define how many items can be selected at a time,",
          "type": "number",
          "artifactType": "Manifest"
        },
        "enableExport": {
          "description": "The exporting of the table to an Excel file is enabled in List Report tables by default. In Object Page, the export to Excel is available by default if the copy/paste feature is also available; otherwise it is disabled.\nTo disable the export in List Report or to enable it in Object Page, use the \"enableExport\" property and set it to false or true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "condensedTableLayout": {
          "description": "You can set the content density to condensed for ui.table on the list report and object page applications.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageToolBar": {
      "description": "Toolbar",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageToolBarActions"
        }
      },
      "additionalProperties": false,
      "required": [
        "actions"
      ]
    },
    "ObjectPageToolBarActions": {
      "description": "Actions",
      "isViewNode": true,
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ObjectPageToolBarAction"
      }
    },
    "ObjectPageToolBarAction": {
      "description": "Action",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "enableOnSelect": {
          "$ref": "#/definitions/SelectType",
          "description": "Enables single selection for a bound action",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "SelectType": {
      "enum": [
        "multi",
        "single"
      ],
      "type": "string"
    },
    "TableCreationModeOP": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/TableCreationModeType",
          "description": "The name property of TableCreationMode defines the creation mode; possible values are:\n- NewPage: The create action leads to a new page.\n- Inline: The create action leads to a new row at the table.\n- CreationRow: No create button will be rendered, an empty row is directly given.\nThe default is \"NewPage\".",
          "artifactType": "Manifest"
        },
        "createAtEnd": {
          "description": "In case of inline creation mode you can decide if the new row will be created at the end of the table, or direcly after the currently selected table. The default value is \"true\"",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCreationModeType": {
      "enum": [
        "CreationRow",
        "Inline",
        "NewPage"
      ],
      "type": "string"
    },
    "PersonalizationTypeOP": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Defines whether the user can add and remove columns to a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "sort": {
          "description": "Defines whether the user can sort a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "filter": {
          "description": "Defines whether the user can filter data of a given table.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "QuickVariantSelectionV4OP": {
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of annotation paths referring to SelectionVariant annotations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnnotationPathAsObject"
          },
          "artifactType": "Manifest"
        },
        "hideTableTitle": {
          "description": "You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "showCounts": {
          "description": "You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "paths"
      ]
    },
    "AnnotationPathAsObject": {
      "type": "object",
      "properties": {
        "annotationPath": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath"
      ]
    },
    "GenericColumnsOP": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageTableColumn"
          },
          {
            "$ref": "#/definitions/ObjectPageTableColumnAction"
          },
          {
            "$ref": "#/definitions/TableCustomColumnOP"
          }
        ]
      }
    },
    "ObjectPageTableColumn": {
      "description": "Table Column",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "Availability": {
      "enum": [
        "Adaptation",
        "Default",
        "Hidden"
      ],
      "type": "string"
    },
    "ObjectPageTableColumnAction": {
      "description": "Inline Action for Object Page",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "afterExecution": {
          "$ref": "#/definitions/ActionAfterExecutionConfigurationOP",
          "description": "Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)",
          "artifactType": "Manifest"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\nDefault: it will be shown by default in the table.\nAdaptation: it will initially not shown in the table but be available via end user adaptation.\nHidden: the column is neither available in the table nor in adaptation.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "ActionAfterExecutionConfigurationOP": {
      "type": "object",
      "properties": {
        "navigateToInstance": {
          "description": "By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting “navigateToInstance”.",
          "type": "boolean",
          "artifactType": "Manifest"
        },
        "enableAutoScroll": {
          "description": "The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action",
          "type": "boolean",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false
    },
    "TableCustomColumnOP": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/PositionOP",
          "description": "Defines the position of the column relative to other columns.",
          "artifactType": "Manifest"
        },
        "header": {
          "description": "The header is shown on the table as header, as well as in the add/remove dialog.",
          "i18nClassification": "COL: Custom column header text",
          "type": "string",
          "artifactType": "Manifest"
        },
        "width": {
          "description": "A string type that represents CSS size values.\nRefer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "template": {
          "description": "Relevant for extension columns; allows the definition of a target fragment.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "horizontalAlign": {
          "$ref": "#/definitions/HorizontalAlign",
          "description": "Aligns the header as well as the content horizontally.",
          "artifactType": "Manifest"
        },
        "availability": {
          "$ref": "#/definitions/Availability",
          "description": "Defines where the column should be shown.\n- Default: it will be shown by default in the table.\n- Adaptation: it will initially not shown in the table but be available via end user adaptation\n- Hidden: the column is neither available in the table nor in adaptation",
          "artifactType": "Manifest"
        },
        "properties": {
          "description": "If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "header",
        "template"
      ]
    },
    "PositionOP": {
      "type": "object",
      "properties": {
        "anchor": {
          "description": "The key of another column to be used as placement anchor.",
          "type": "string",
          "artifactType": "Manifest"
        },
        "placement": {
          "$ref": "#/definitions/Placement",
          "description": "Define the placement, either before or after the anchor column.",
          "artifactType": "Manifest"
        }
      },
      "additionalProperties": false,
      "required": [
        "placement"
      ]
    },
    "Placement": {
      "enum": [
        "After",
        "Before",
        "End"
      ],
      "type": "string"
    },
    "HorizontalAlign": {
      "enum": [
        "Begin",
        "Center",
        "End"
      ],
      "type": "string"
    },
    "TableTypeV4": {
      "enum": [
        "AnalyticalTable",
        "GridTable",
        "ResponsiveTable"
      ],
      "type": "string"
    },
    "SelectionMode": {
      "enum": [
        "Auto",
        "Multi",
        "None",
        "Single"
      ],
      "type": "string"
    },
    "ObjectPageSectionForm": {
      "type": "object",
      "properties": {
        "form": {
          "description": "Form",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionDataPoint": {
      "type": "object",
      "properties": {
        "dataPoint": {
          "description": "Data Point",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionContact": {
      "type": "object",
      "properties": {
        "contact": {
          "description": "Contact",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionAddress": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Address",
          "isViewNode": true,
          "type": "object",
          "properties": {},
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "ObjectPageSectionPresentationVariant": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/ObjectPageSectionTableV4"
          },
          {
            "$ref": "#/definitions/ObjectPageSectionChart"
          }
        ]
      }
    },
    "ObjectPageSectionChart": {
      "type": "object",
      "properties": {
        "chart": {
          "$ref": "#/definitions/ObjectPageChart",
          "description": "Chart"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageChart": {
      "type": "object",
      "properties": {
        "toolBar": {
          "$ref": "#/definitions/ObjectPageToolBar",
          "description": "Chart Toolbar"
        }
      },
      "additionalProperties": false
    },
    "CustomSections": {
      "description": "Custom Sections",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "custom": {
          "description": "Custom Sections",
          "isViewNode": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectPageCustomSectionFragment"
          }
        }
      },
      "additionalProperties": false
    },
    "ObjectPageCustomSectionFragment": {
      "description": "Fragment",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "enum": [
            "sap.ui.core.Fragment"
          ]
        },
        "fragmentName": {
          "type": "string"
        },
        "relatedFacet": {
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "XML"
          ]
        },
        "title": {
          "description": "The label of the custom section, preferrable as an i18n key",
          "i18nClassification": "TIT: Custom section title",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "fragmentName",
        "id",
        "relatedFacet",
        "relativePosition",
        "title",
        "type"
      ]
    },
    "SectionPosition": {
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "ObjectPageFooter<ObjectPageFooterActions>": {
      "description": "Footer",
      "isViewNode": true,
      "type": "object",
      "properties": {
        "actions": {
          "$ref": "#/definitions/ObjectPageFooterActions"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageFooterActions": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}