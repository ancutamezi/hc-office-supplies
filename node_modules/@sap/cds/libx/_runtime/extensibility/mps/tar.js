const fs = require('fs')
const path = require('path')
const cds = require('../../cds')
const { TAR_CLI, findCsvFiles, collectCsvFiles, packTarArchive } = require('../../../../lib/utils/resources')
const { exists } = require('./utils')

// REVISIT: resource folder and file to be defined
const RESOURCE_FILE = 'to_be_defined/to_be_defined.tgz'

const supplementaryFiles = async req => {
  // first look for files in the resource folder
  const resource = path.join(global.cds.root, RESOURCE_FILE)
  if (await exists(resource)) {
    return fs.promises.readFile(resource, 'binary')
  }

  // check if collected in sdc folder
  // REVISIT: to be deleted
  let files
  const sdc = path.join(global.cds.root, 'sdc')
  if (await exists(sdc)) {
    files = await findCsvFiles(sdc, true)
  }

  // if not collected, then collect
  if (!files || !files.length) {
    const features = (cds.env.features && cds.env.features.folders) || 'fts/*'
    const csn = await cds.load(['*', features])
    files = await collectCsvFiles(csn.$sources)
  }

  if (!files.length) {
    req.reject(404)
  }

  return await packTarArchive(files, global.cds.root, req.data.flat, TAR_CLI)
}

module.exports = {
  TAR_CLI,
  supplementaryFiles
}
