/** @type {import('../../lib')} */
const cds = global.cds || require('../../lib')
module.exports = cds

/*
 * csn aspects
 */
const { any, entity, Association } = cds.builtin.classes
cds.extend(any).with(require('./common/aspects/any'))
cds.extend(Association).with(require('./common/aspects/Association'))
cds.extend(entity).with(require('./common/aspects/entity'))

/*
 * mtx?
 */
Object.defineProperty(cds, '_mtxEnabled', {
  get: () => cds.mtx && typeof cds.mtx.in === 'function' && !cds.env.features.streamlined_mtx,
  configurable: true
})
Object.defineProperty(cds, '_mpsEnabled', {
  get: () =>
    cds.requires.extensibility ||
    cds.requires.toggles ||
    (cds.requires.multitenancy && cds.env.features.streamlined_mtx),
  configurable: true
})

/*
 * (lazy) feature flags
 */
// referential integrity
// REVISIT: why is _db_foreign_key_constraints necessary?
// REVISIT: Do not access cds.env too early!
Object.defineProperty(cds.env.features, '_db_foreign_key_constraints', {
  get: () => {
    const { assert_integrity: ai, assert_integrity_type: ait } = cds.env.features
    if ((typeof ai === 'string' && ai.match(/individual/i)) || (ait && ait.match(/db/i))) return true
    return false
  },
  configurable: true
})
