const cds = require('../../cds')
const LOG = cds.log()

function decode(req, header, encoded) {
  if (!req.headers[header]) return
  if (encoded) return JSON.parse(Buffer.from(req.headers[header], 'base64').toString('utf-8'))
  return req.headers[header]
}

class DwcStrategy {
  constructor() {
    this.name = 'dwc'
  }

  authenticate(req) {
    let tenant, usr, scopes, attr

    try {
      tenant = decode(req, 'dwc-tenant')
      usr = decode(req, 'dwc-user', true)
      scopes = decode(req, 'dwc-scopes') || ''
      attr = decode(req, 'dwc-xsuaa-attributes', true) || {}
    } catch (e) {
      LOG._debug && LOG.debug('Error while parsing HTTP headers for DWC authentication:', e)
      return this.fail()
    }

    if (!tenant || !usr) return this.fail()

    // make scopes app-local
    const xsappname = decode(req, 'dwc-xsuaa-xsappname') || ''
    scopes = scopes.split(' ').map(s => (s.startsWith(xsappname + '.') ? s.replace(xsappname + '.', '') : s))

    const user = new cds.User({
      id: usr.logonName,
      tenant,
      _roles: ['any', 'authenticated-user', ...scopes],
      attr: Object.assign(attr, usr)
    })

    this.success(user)
  }
}

module.exports = DwcStrategy
