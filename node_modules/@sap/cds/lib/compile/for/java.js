const cds = require ('../../index')
const _cached = Symbol('for Java')

module.exports = function cds_compile_for_java (csn,o) {
  if (!csn) return
  const cached = csn[_cached]; if (cached) return cached
  // csn = cds.minify (csn)
  csn = cds.compile.for.drafts (csn,o)
  // Add a parsed _where clause for @restrict.{grant,where} annotations
  if (csn.definitions) for (let {'@restrict':rr} of Object.values(csn.definitions)) if (rr) {
    for (let r of rr) if (r.grant && r.where) try {
      r._where = JSON.stringify (cds.parse.xpr(r.where))
    } catch(e){/* ignored */}
  }
  return csn[_cached] = csn
}
